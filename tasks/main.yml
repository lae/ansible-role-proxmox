---
# tasks file for ansible-role-proxmox
- assert:
    that:
      - "hostvars[item].ansible_default_ipv4.address == True"
    msg: "Missing IP address and other information for {{ item }}. Have you gathered its facts?"
  with_items: "{{ groups[pve_group] }}"

- include: ssh_cluster_config.yml

- name: Enumerate all cluster hosts within the hosts file
  blockinfile:
    dest: /etc/hosts
    marker: "# {mark} ANSIBLE MANAGED: Proxmox Cluster Hosts"
    content: |
      {% for host in groups[pve_group] %}
      {{ hostvars[host]['ansible_default_ipv4']['address'] }} {{ hostvars[host]['ansible_fqdn'] }} {{ hostvars[host]['ansible_hostname'] }}
      {% endfor %}

- name: Trust Proxmox' packaging key
  apt_key:
    data: "{{ lookup('file', 'files/proxmox_key.asc') }}"
    id: 9887F95A
    state: present

- name: Add Proxmox repository
  apt_repository:
    repo: "{{ pve_repository_line }}"
    filename: proxmox
    state: present

- name: Run dist-upgrade
  apt:
    update_cache: yes
    cache_valid_time: 3600
    upgrade: dist

- name: Remove os-prober package
  apt:
    name: os-prober
    state: absent

- name: Install Proxmox VE and related packages
  apt:
    name: "{{ item }}"
    state: latest
  with_items:
    - proxmox-ve
    - postfix
    - open-iscsi
    - ksm-control-daemon
    - systemd-sysv
    - patch

- block:

  - name: Remove automatically installed PVE Enterprise repo configuration
    apt_repository:
      repo: "deb https://enterprise.proxmox.com/debian jessie pve-enterprise"
      filename: pve-enterprise
      state: absent

  - name: Remove subscription check wrapper function in web UI
    patch:
      src: 00_remove_checked_command.patch
      dest: /usr/share/pve-manager/js/pvemanagerlib.js
      backup: yes

  when: "'pve-no-subscription' in pve_repository_line"

- name: Check if kernel has been updated
  script: scripts/check_kernel_update.sh
  register: __pve_kernel
  changed_when: "'updated=true' in __pve_kernel.stdout"
  when: pve_check_for_kernel_update

- block:

  - name: Reboot for kernel update
    command: "shutdown -r +1 'PVE kernel update detected by Ansible, rebooting'"
    async: 0
    poll: 0
    ignore_errors: true

  - name: Wait for server to come back online
    local_action: wait_for port=22 host={{ inventory_hostname }} search_regex=OpenSSH delay=60 timeout=450
    become: false

  when:
    - pve_reboot_on_kernel_update
    - __pve_kernel | changed

- include: ipmi_watchdog.yml
  when: pve_watchdog == 'ipmi'

- name: Remove old Debian kernels
  apt:
    name: "{{ item }}"
    state: absent
  with_items:
    - linux-image-amd64
    - linux-image-3.16.0-4-amd64
  when:
    - pve_remove_old_kernels
    - not __pve_kernel | changed

- name: LDAP fix for authenticated search
  lineinfile:
    line: "    $ldap->bind('{{ pve_ldap_bind_user }}', password => '{{ pve_ldap_bind_password }}');"
    insertbefore: "ldap->search\\("
    dest: /usr/share/perl5/PVE/Auth/LDAP.pm
  notify:
    - restart pvedaemon
  when:
    - pve_ldap_bind_user is defined
    - pve_ldap_bind_password is defined

